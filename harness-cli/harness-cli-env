# harness cli environment file (sourced by scripts)

# Harness CLI config, should work as-is unless you are using SSL or connecting to a remote Harness Server
export HARNESS_SERVER_ADDRESS=${HARNESS_SERVER_ADDRESS:-localhost}
#export HARNESS_SERVER_ADDRESS=gt
#export HARNESS_SERVER_ADDRESS=harness.sitespect.actionml.cloud
#export HARNESS_SERVER_ADDRESS=harness-stage.sitespect.actionml.cloud
#export HARNESS_SERVER_ADDRESS=internal-a6b17b56b408211ea91b10a6e03ba136-884133241.us-east-1.elb.amazonaws.com
#export HARNESS_SERVER_ADDRESS=ss-stage
export HARNESS_SERVER_PORT=${HARNESS_SERVER_PORT:-9090}


export ELASTICSEARCH_REST_HOST=${ELASTICSEARCH_REST_HOST:-localhost}
export ELASTICSEARCH_REST_PORT=${ELASTICSEARCH_REST_PORT:-9200}
export ELASTICSEARCH_REST_PROTOCOL=${ELASTICSEARCH_REST_PROTOCOL:-http}

# =============================================================
# Needed for Engines that use Spark and Elasticsearch, like
# the UR and URNavHinting
# =============================================================

# Address of Elasticsearch to be used in the Spark Job so the Spark to ES connection address
# used in engine config as sparkConf.spark.es.nodes value
export ELASTICSEARCH_MASTER=#ELASTICSEARCH_REST_PROTOCOL://$ELASTICSEARCH_REST_HOST:$ELASTICSEARCH_REST_PORT

# address of Spark master used to launch Jobs
# in engine config is the value for sparkConf.master
# value should be "local" or something like "spark://some-address:7077"
export SPARK_MASTER=${SPARK_MASTER:-local}

# =============================================================
# Only change to enable TLS/SSL
# =============================================================

# export HARNESS_CLI_SSL_ENABLED=true # to enable TLS/SSL using the rest below for "localhost" keys passwords and certs
export HARNESS_CLI_SSL_ENABLED=${HARNESS_CLI_SSL_ENABLED:-false}

# the file provided works with localhost, create your own for some other IP address
export HARNESS_CLI_CERT_PATH=${HARNESS_CLI_CERT_PATH:-$HARNESS_CLI_HOME/harness.pem}

# =============================================================
# Only used for Authentication
# =============================================================

# Harness Auth-Server setup
# export HARNESS_CLI_AUTH_ENABLED=true
export HARNESS_CLI_AUTH_ENABLED=${HARNESS_CLI_AUTH_ENABLED:-false}
export HARNESS_AUTH_URL=${HARNESS_AUTH_URL:-http://localhost:9099}
# When auth is enabled there must be an admin user-id set so create one before turning on Auth
# Both the Harness server and the Python CLI need this env var when using Auth
export ADMIN_USER_ID=${ADMIN_USER_ID:-some-user-id}
# The Python CLI needs to pass the user-id and user-secret to the Python SDK so when using Auth supply a pointer to
# the user-secret here.
export ADMIN_USER_SECRET_LOCATION=${ADMIN_USER_SECRET_LOCATION:-"$HOME/.ssh/${ADMIN_USER_ID}.secret"}
